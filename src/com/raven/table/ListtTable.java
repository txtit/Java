
package com.raven.table;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
public class ListtTable extends javax.swing.JFrame {
    private JTable table;
    private DefaultTableModel tableModel;
        public ListtTable(){
            
        }
    public ListtTable(String selectBan) {
        if(!selectBan.equals("")){
            
        }
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
         // Tạo các cột cho bảng
        String[] columnNames = {"Bàn", "Trạng thái"};
    
        // Tạo một mảng 2D chứa dữ liệu cho các hàng
        Object[][] data = {
                {"Bàn 1", "Trống"},
                {"Bàn 2", "Đang phục vụ"},
                {"Bàn 3", "Trống"},
                {"Bàn 4", "Đang phục vụ"},
                {"Bàn 5", "Trống"},
                {"Bàn 6", "Trống"},
                {"Bàn 7", "Đang phục vụ"},
                {"Bàn 8", "Đang phục vụ"},
                {"Bàn 9", "Trống"},
                {"Bàn 10", "Trống"}
        };

        // Tạo DefaultTableModel với dữ liệu và cột đã xác định
        tableModel = new DefaultTableModel(data, columnNames);

        // Tạo JTable với DefaultTableModel
        table = new JTable(tableModel);

        // Tạo JScrollPane để chứa JTable
        JScrollPane scrollPane = new JScrollPane(table);

        // Tạo JButton để thanh toán bàn
        JButton payButton = new JButton("Thanh toán");

        // Tạo JButton để chỉnh sửa trạng thái bàn
        JButton editButton = new JButton("Chỉnh sửa");

        // Thêm sự kiện cho JButton thanh toán
        payButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Lấy hàng được chọn trong JTable
                int selectedRow = table.getSelectedRow();

                // Kiểm tra xem có hàng nào được chọn không
                if (selectedRow != -1) {
                    // Cập nhật trạng thái bàn thành "Trống"
                    tableModel.setValueAt("Trống", selectedRow, 1);
                }
            }
        });

        // Thêm sự kiện cho JButton chỉnh sửa
        editButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Lấy hàng được chọn trong JTable
                int selectedRow = table.getSelectedRow();

                // Kiểm tra xem có hàng nào được chọn không
                if (selectedRow != -1) {
                    // Lấy trạng thái hiện tại của bàn
                    String currentStatus = (String) tableModel.getValueAt(selectedRow, 1);

                    // Hiển thị hộp thoại để nhập trạng thái mới
                    String newStatus = JOptionPane.showInputDialog(null, "Nhập trạng thái mới:", currentStatus);

                    // Kiểm tra xem người dùng đã nhập trạng thái mới hay chưa
                    if (newStatus != null) {
                        // Cập nhật trạng thái bàn với giá trị mới
                        tableModel.setValueAt(newStatus, selectedRow, 1);
                    }
                }
            }
        });

        // Tạo JPanel và đặt Layout thành BorderLayout
        JPanel panel = new JPanel(new BorderLayout());

        // Thêm JScrollPane vào JPanel
        panel.add(scrollPane, BorderLayout.CENTER);

        // Tạo JPanel mới để chứa các JButton
        JPanel buttonPanel = new JPanel();

        // Thêm JButton thanh toán vào JPanel
        buttonPanel.add(payButton);

        // Thêm JButton chỉnh sửa vào JPanel
        buttonPanel.add(editButton);

        // Thêm JPanel chứa các JButton vào JPanel chính
        panel.add(buttonPanel, BorderLayout.SOUTH);

        // Thêm JPanel chứa tất cả các thành phần vào JFrame
        add(panel);

        // Cấu hình JFrame
        setTitle("Danh sách bàn ăn");
//        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new ListtTable();
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
